https://www.beecrowd.com.br/repository/UOJ_2460.html

#include <stdio.h>
#include <stlib.h>
#define MAX 50000

typedef struct no{
  int valor;
  struct no *seg;
}no;

//função cria nós
no *criano(int valor){
  no *novono;
  novono = malloc(sizeof(no));
  if(novono != NULL){
    novono->valor = valor;
    novono->seg = NULL;
  }
  return novono;
  }

//função insere pessoas na fila
void insere(no **es, no **et, int N){
  no *novo = criano(N);
  if(*et == NULL)
    *et = *es = novo;
  else {
    (*et)->seg = novo;
    *et = novo;
  }
}

//função remove pessoas da fila
int remove(no **es, no **et){
  no *p;
  p = *es;
  int x = p->valor;
  *es = p->seg;
  if(*es == NULL){
    *et = NULL;
  }
  free(p);
  return x;
}

//função imprime fila
void print(no *es){
  no *p;
  p = *es;
  while(p != NULL){
    printf("%d ", p->valor);
    p = p->seg;
  }
printf("\n");
}

//função principal
int main(){

  int N, M;
  no *es = 0;
  no *et = NULL;

  //quantidade de pessoas que entraram na fila
  scanf("%d", &N);
  
  //leitura dos identificadores dos que entraram na fila
  for (int z = 0; z < N; z++){
    int tagN;
    scanf("%d", &tagN);
    insere(&es, &et, tagN);
  }

  //quantidade de pessoas que saíram da fila
  scanf("%d", &M);

  //leitura dos que saíram da fila
  for (int z = 0; z < M; z++){
    int tagM;
    scanf("%d", &tagM);
    remove(&es, &et);
  }

  //exibindo os que ficaram
  print(es);
  
  //
  while(es != NULL){
    remove(&es, &et);
  }

  return 0;
}
